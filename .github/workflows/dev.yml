name: CI-DEV

on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    env:
      NODE_ENV: test
      AWS_KEY_REGION: eu-west-3
      DATABASE_URL: postgresql://admin:password@localhost:5432/postgres?schema=public
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      ASSETS_CDN_URL: https://test-domain-name.cloudfront.net
      DOMAIN_URL: https://test-domain-name.com
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Setup
      - name: Actions checkout
        uses: actions/checkout@v2

      - name: Set up node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # Build
      - name: Install packages
        run: yarn

      - name: Build app
        run: yarn build

      - name: Build database
        run: yarn migrate:deploy && yarn script:required-data-generator && yarn script:seed-data-generator

      # Test
      - name: Test app
        run: yarn test:full

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    env:
      AWS_KEY_REGION: ${{ secrets.AWS_KEY_REGION }}
      NODE_ENV: dev
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      DATABASE_URL_DEV: ${{ secrets.DATABASE_URL_DEV }}
      ASSETS_CDN_URL: https://from-serverless.cloudfront.net
      DOMAIN_URL: ${{ secrets.DOMAIN_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

    if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
    steps:
      # Setup
      - name: Actions checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      # Build
      - name: Install packages
        run: yarn

      # Deploy
      - name: Authenticate serverless
        run: npx sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy serverless dev
        run: yarn sls:deploy
